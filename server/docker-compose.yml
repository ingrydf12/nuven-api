version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: nuven_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: javaNeverEnds
      POSTGRES_DB: nuven_api
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d/
    networks:
      - nuven-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nuven_api"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend
  api:
    build: 
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: nuven_api
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - DATABASE_URL=postgresql://[DATABASE_USER-CHANGETHIS]:[DATABASE_PASSWORD-CHANGETHIS]@db:5432/nuven_api?schema=public
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-change-this}
      - JWT_EXPIRES_IN=1h
      - PORT=3000
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nuven-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: nuven_client
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./client/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs/
    depends_on:
      - api
    networks:
      - nuven-network

  redis:
    image: redis:7-alpine
    container_name: nuven_redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - nuven-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispass123}

  nginx:
    image: nginx:alpine
    container_name: nuven_nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/certs/
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
      - client
    networks:
      - nuven-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: nuven_portainer
    restart: unless-stopped
    ports:
      - '9000:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - nuven-network

networks:
  nuven-network:
    driver: bridge
    name: nuven-network

volumes:
  pgdata:
    name: nuven_postgres_data
  redis_data:
    name: nuven_redis_data  
  portainer_data:
    name: nuven_portainer_data